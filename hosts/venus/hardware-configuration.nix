# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/636b91ce-a976-48e5-8e7d-76cfb6b3fce6";
      fsType = "ext4";
    };
    "/mnt/data02" = {
      device = "/dev/disk/by-uuid/04130ba4-9bc6-434c-a729-ae3341000181";
      fsType = "ext4";
    };
#    "/mnt/data02ntfs" = {
#      device = "/dev/sdc1";
#      fsType = "ntfs";
#    };
  };

  # LUKS for "/"
  boot.initrd.luks.devices."luks-d0dbdb7a-a656-4c57-ab4c-116b843831a3".device = "/dev/disk/by-uuid/d0dbdb7a-a656-4c57-ab4c-116b843831a3";
  # LUKS for "/mnt/data02"
  boot.initrd.luks.devices."luks-e93d7ae8-319b-4525-97eb-37ddf8cf3911".device = "/dev/disk/by-uuid/e93d7ae8-319b-4525-97eb-37ddf8cf3911";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/D55E-8533";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
}
